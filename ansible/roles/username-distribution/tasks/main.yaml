- name: Evaluate {{ registration_namespace }} namespace if not exists
  k8s:
    api_version: v1
    kind: Namespace
    name: '{{ registration_namespace }}'
    state: present

- name: Generate Admin Password if it is not defined
  set_fact:
    workshop_registration_admin_password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters') }}"

- name: Evaluate app instance
  k8s:
    state: present
    namespace: '{{ registration_namespace }}'
    resource_definition: "{{ lookup('template', 'user_registration.yaml.j2') }}"

- name: initialize username array
  set_fact:
    users: []

- name: create usernames
  set_fact:
    users: "{{ users + ['user'+item | string] }}"
  loop: "{{ range(1,((num_users | int) + 1)) | list }}"

- name: Provision {{ num_users }} User Namespaces
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'user-namespace.yaml.j2') }}"
  vars:
    __namespaces:
      - "user"
  retries: 10
  delay: 30

- name: Create Role to access Terminal
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'pod-exec-role.yaml.j2') }}"

- name: Give {{ num_users }} users access to projects
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'user-rolebinding.yaml.j2') }}"
  vars:
    bindings:
    - namespace: 'user'
      role: 'admin'
  retries: 15
  delay: 30